services:
  onionize:
    container_name: onionize
    image: torservers/onionize
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - onion_services:/var/lib/tor/onion_services:z
    restart: unless-stopped

  db:
    image: mysql:5.7
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=wordpress
      - MYSQL_USER=wordpress
      - MYSQL_PASSWORD=wordpress
    restart: unless-stopped
    volumes:
      - db_data:/var/lib/mysql

  wordpress:
    image: wordpress:latest
    environment:
      - ONIONSERVICE_NAME=wordpress
      - WORDPRESS_DB_HOST=db
      - WORDPRESS_DB_USER=wordpress
      - WORDPRESS_DB_PASSWORD=wordpress
      - WORDPRESS_DB_NAME=wordpress
    ports:
      - "8080:80"
    restart: unless-stopped
    depends_on:
      - db
      - onionize
  # --- IPFS Node ---
  ipfs:
    image: ipfs/kubo:latest
    ports:
      - "4001:4001"
      - "5001:5001"
      - "8081:8080"
    volumes:
      - ipfs_staging:/export
      - ipfs_data:/data/ipfs
    restart: unless-stopped
  
  # --- IPFS Cluster Peer ---
  ipfs-cluster:
    image: ipfs/ipfs-cluster:latest
    environment:
      CLUSTER_PEERNAME: "node1"
      # Must be a 64-character hex string (32 bytes)
      # Generate with: od -vN 32 -An -tx1 /dev/urandom | tr -d ' \n'
      CLUSTER_SECRET: "0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef"
      CLUSTER_REPLICATIONFACTOR_MIN: 2
      CLUSTER_REPLICATIONFACTOR_MAX: 3
      # Point to the ipfs container, not localhost
      CLUSTER_IPFSHTTP_NODEMULTIADDRESS: "/dns4/ipfs/tcp/5001"
      CLUSTER_RESTAPI_HTTPLISTENMULTIADDRESS: /ip4/0.0.0.0/tcp/9094 # Expose API
    ports:
      - "127.0.0.1:9094:9094"
      # - "9094:9094"
      - "9096:9096"
    depends_on:
      - ipfs
    volumes:
      - cluster_data:/data/ipfs-cluster
    restart: unless-stopped
  
  

volumes:
  db_data:
  onion_services:
  wordpress_data:
  ipfs_staging:
  ipfs_data:
  cluster_data: